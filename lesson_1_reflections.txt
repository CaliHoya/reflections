How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   It easily pointed out the few places in which the code was changed.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can easily find bugs and fix them more quickly.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The con is that you can be more prone to user error. The pro is that you can commit when you choose, and separate each commit
    based on when there's been a logical change. This makes it easier to compare gits without too many or too few.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because many times you have to change multiple files to create a new feature or desired adjustment.

How can you use the commands git log and git diff to view the history of files?

    git log gives you all the commit history, so you can then use git diff to see the differences between commits.

How might using version control make you more confident to make changes that
could break something?

    You know you can always go back, so you can take more risks.

Now that you have your workspace set up, what do you want to try using Git for?

    Getting comfortable with version control.