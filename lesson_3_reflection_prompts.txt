When would you want to use a remote repository rather than keeping all your work local?

    When you need to collaborate with others, when you want to have a project open source, or when you want another copy of your project remotely.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because you may not always want to integrate the changes made on the remote repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches point to different commits that are on separate tracks. Clones are copies of a repository either from remote to local or local to local. Fork is a clone from remote to remote.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can then keep in mind how many commits have been made since you pushed to the remote repository. This is especially good to make sure to continue to update the remote repository when your changes are ready.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    You chould use a version control system like Google Docs, where there are auto-saves and real-time changes. It would be easier when
    making changes can't break things, but it would be much harder to understand changes made and to avoid shipping incomplete features.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Making changes in a separate branch allows you to push to the remote repository while making sure you don't change master without having your collaborators confirm that the code will not break master. You'd want to keep everything on master when you're working alone and don't think the current changes can break master.
